name: CI/CD Pipeline - Pedro Tiago Contabilidade

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 8 * * 1'  # Toda segunda Ã s 8h

jobs:
  quality:
    name: Code Quality Check
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort pylint
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Format check with Black
      run: black --check .

    - name: Import sort check with isort
      run: isort --check-only .

    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    needs: quality

    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov pytest-xdist
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Run tests with pytest
      run: |
        pytest --cov=./ --cov-report=xml --cov-report=html -v

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: quality

    steps:
    - uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy results to GitHub Security
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'

    - name: Run Bandit security linter
      run: |
        pip install bandit
        bandit -r . -f json -o bandit-report.json || true

    - name: Upload Bandit results
      uses: actions/upload-artifact@v4
      with:
        name: bandit-report
        path: bandit-report.json

  build:
    name: Build and Package
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Build package
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python setup.py sdist bdist_wheel || echo "No setup.py found"

    - name: Store artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-packages
        path: dist/

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production

    steps:
    - uses: actions/checkout@v4

    - name: Deploy notification
      run: |
        echo "ðŸš€ Deploying Pedro Tiago Contabilidade to production"
        echo "Version: ${{ github.sha }}"
        echo "Date: $(date)"
        # Add actual deployment steps here

  notify:
    name: Notification
    runs-on: ubuntu-latest
    needs: [deploy]
    if: always()

    steps:
    - name: Send notification
      run: |
        echo "Pipeline completed for Pedro Tiago Contabilidade"
        echo "Status: ${{ job.status }}"
        # Add email/slack notification here